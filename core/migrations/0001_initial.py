# Generated by Django 3.0.8 on 2020-08-10 14:26

import core.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registrar_name', models.CharField(max_length=50)),
                ('registrar_email', models.EmailField(max_length=254)),
                ('registrar_mob_no', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('registrar_tel_no', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('school_name', models.CharField(max_length=100)),
                ('school_mob_no_1', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('school_mob_no_2', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('school_tel_no', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('school_email', models.EmailField(blank=True, max_length=254)),
                ('school_code', models.CharField(max_length=20)),
                ('addr', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('nation', models.CharField(max_length=50)),
                ('pincode', models.CharField(max_length=6)),
                ('board', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('classification', models.CharField(max_length=25, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_name', models.CharField(max_length=4)),
                ('section', models.CharField(max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Class_test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_test_name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('class_test_file', models.FileField(max_length=200, upload_to=core.models.class_test_files_path)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('buffer_time', models.DurationField(blank=True, null=True)),
                ('duration', models.DurationField()),
                ('is_graded', models.BooleanField(default=True)),
                ('maximum_marks', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(500)])),
                ('is_published', models.BooleanField(default=False)),
                ('year', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(3000)])),
            ],
        ),
        migrations.CreateModel(
            name='Demo_applicant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institute_name', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=50)),
                ('mob_no', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(max_length=254)),
                ('institute_type', models.CharField(max_length=25)),
                ('designation', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('homework_name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=500)),
                ('homework_file', models.FileField(max_length=200, upload_to=core.models.homework_files_path)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField()),
                ('is_graded', models.BooleanField(default=False)),
                ('maximum_marks', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(500)])),
                ('is_published', models.BooleanField(default=False)),
                ('year', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(3000)])),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mob_no', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('first_password', models.CharField(blank=True, max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(100)])),
                ('kind', models.CharField(max_length=10)),
                ('text', models.CharField(blank=True, max_length=500)),
                ('file', models.ImageField(blank=True, max_length=200, null=True, upload_to=core.models.quiz_files_path)),
                ('maximum_marks', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(100)])),
            ],
        ),
        migrations.CreateModel(
            name='Question_response',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100)])),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Question')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(blank=True, max_length=100)),
                ('kind', models.CharField(max_length=10)),
                ('duration', models.DurationField()),
                ('normalized_marks', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(500)])),
                ('is_published', models.BooleanField(default=False)),
                ('last_edit_dt', models.DateTimeField(auto_now=True)),
                ('start_dt', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_name', models.CharField(max_length=100)),
                ('school_mob_no_1', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('school_mob_no_2', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('school_tel_no', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('school_email', models.EmailField(blank=True, max_length=254)),
                ('school_code', models.CharField(max_length=20)),
                ('addr', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('nation', models.CharField(max_length=50)),
                ('pincode', models.CharField(max_length=6)),
                ('board', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mob_no', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('addr', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=20)),
                ('state', models.CharField(max_length=20)),
                ('nation', models.CharField(max_length=20)),
                ('pincode', models.CharField(max_length=6)),
                ('is_class_teacher', models.BooleanField(blank=True)),
                ('first_password', models.CharField(blank=True, max_length=10)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.School')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(max_length=20)),
                ('link', models.CharField(blank=True, max_length=200)),
                ('event_id', models.CharField(blank=True, max_length=1024)),
                ('alternate_link', models.CharField(blank=True, max_length=200)),
                ('alternate_password', models.CharField(blank=True, max_length=100)),
                ('alternate_description', models.CharField(blank=True, max_length=100)),
                ('class_is', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Class')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Teacher')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roll', models.CharField(max_length=10)),
                ('mob_no', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('addr', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=20)),
                ('state', models.CharField(max_length=20)),
                ('nation', models.CharField(max_length=20)),
                ('pincode', models.CharField(max_length=6)),
                ('parent_mob_no_1', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('parent_mob_no_2', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('parent_email', models.EmailField(blank=True, max_length=254)),
                ('first_password', models.CharField(blank=True, max_length=10)),
                ('class_is', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Class')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Parent')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Slot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(max_length=9)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('period_number', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(10)])),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.School')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=32, null=True)),
                ('last_request', models.DateTimeField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Slot')),
                ('subject', models.ManyToManyField(to='core.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='Response_answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, max_length=500)),
                ('file', models.ImageField(blank=True, max_length=200, null=True, upload_to=core.models.quiz_files_path)),
                ('question_response', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Question_response')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz_submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(500)])),
                ('is_submitted', models.BooleanField(default=False)),
                ('is_graded', models.BooleanField(default=False)),
                ('submission_dt', models.DateTimeField(auto_now=True)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Quiz')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Student')),
            ],
        ),
        migrations.AddField(
            model_name='quiz',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Subject'),
        ),
        migrations.AddField(
            model_name='question_response',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Student'),
        ),
        migrations.AddField(
            model_name='question',
            name='quiz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Quiz'),
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=1)),
                ('text', models.CharField(blank=True, max_length=100)),
                ('file', models.ImageField(blank=True, max_length=200, null=True, upload_to=core.models.quiz_files_path)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Question')),
            ],
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(blank=True, max_length=100)),
                ('text', models.CharField(blank=True, max_length=500)),
                ('file', models.FileField(blank=True, max_length=200, null=True, upload_to=core.models.notice_files_path)),
                ('create_dt', models.DateTimeField(auto_now_add=True)),
                ('last_edit_dt', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(default=False)),
                ('issue_dt', models.DateTimeField(blank=True, null=True)),
                ('category', models.ManyToManyField(to='core.Category')),
                ('issuer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes_name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=500)),
                ('notes_file', models.FileField(max_length=200, upload_to=core.models.notes_files_path)),
                ('publish_time', models.DateTimeField(auto_now_add=True)),
                ('last_edit_time', models.DateTimeField(auto_now=True)),
                ('year', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(3000)])),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='Homework_submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_file', models.FileField(max_length=200, upload_to=core.models.homework_submission_files_path)),
                ('submission_time', models.DateTimeField(auto_now=True)),
                ('marks', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(500)])),
                ('checked_file', models.FileField(blank=True, max_length=200, null=True, upload_to=core.models.homework_checked_files_path)),
                ('is_checked', models.BooleanField(default=False)),
                ('homework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Homework')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Student')),
            ],
        ),
        migrations.AddField(
            model_name='homework',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Subject'),
        ),
        migrations.CreateModel(
            name='Correct_answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=100)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Question')),
            ],
        ),
        migrations.CreateModel(
            name='Class_test_submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_file', models.FileField(max_length=200, upload_to=core.models.class_test_submission_files_path)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('upload_start_time', models.DateTimeField(blank=True, null=True)),
                ('submission_time', models.DateTimeField(blank=True, null=True)),
                ('marks', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(500)])),
                ('checked_file', models.FileField(blank=True, max_length=200, null=True, upload_to=core.models.class_test_checked_files_path)),
                ('is_checked', models.BooleanField(default=False)),
                ('is_submitted', models.BooleanField(default=False)),
                ('class_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Class_test')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Student')),
            ],
        ),
        migrations.AddField(
            model_name='class_test',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Subject'),
        ),
        migrations.AddField(
            model_name='class',
            name='class_teacher',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='class_is', to='core.Teacher'),
        ),
        migrations.AddField(
            model_name='class',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.School'),
        ),
        migrations.CreateModel(
            name='Authority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=20)),
                ('power_level', models.CharField(blank=True, max_length=1)),
                ('mob_no', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('addr', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(blank=True, max_length=20)),
                ('state', models.CharField(blank=True, max_length=20)),
                ('nation', models.CharField(blank=True, max_length=20)),
                ('pincode', models.CharField(blank=True, max_length=6)),
                ('first_password', models.CharField(blank=True, max_length=10)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.School')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('total_questions', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100)])),
                ('answered_questions', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100)])),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Student')),
            ],
        ),
    ]
